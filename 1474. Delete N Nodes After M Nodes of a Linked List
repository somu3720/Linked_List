/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteNodes(ListNode head, int m, int n) {
        
        ListNode currNode = head;
        ListNode lastNode = head;
        
        while(currNode != null)
        {
            int mcount = m;
            int ncount = n;
            
            // traverse m nodes
            while(currNode != null && mcount != 0)
            {
                lastNode = currNode;
                currNode = currNode.next;
                mcount--;
            }
            
            // traverse n nodes
            while(currNode != null && ncount != 0)
            {
                currNode = currNode.next;
                ncount--;
            }
            
            
            // delete n nodes
            
            lastNode.next = currNode;
            
        }
        
        return head;
    }
}

//https://leetcode.com/problems/delete-n-nodes-after-m-nodes-of-a-linked-list/solution/
