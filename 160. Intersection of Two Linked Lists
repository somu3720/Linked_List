/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
        ListNode p1 = headA;
        ListNode p2 = headB;
        
        while(p1 != p2)
        {
            p1 = p1 == null ? headB : p1.next;
            p2 = p2 == null ? headA : p2.next;
        }
        
        
        return p1;
        
    }
}

/*
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
        Set<ListNode> visited = new HashSet<>();
        
        // traverversing B & storing its node in hashset
        
        while(headB != null)
        {
            visited.add(headB);
            headB = headB.next;
        }
        
        // traversing A & checking it is present in hashset;
        
        while(headA != null)
        {
            if(visited.contains(headA)) return headA;
            headA = headA.next;
        }
        
        return null;
    }
}

*/
