class MyHashMap {
    
    int []map;
    

    public MyHashMap() {
        map = new int[1000000 + 1];
        for(int i = 0; i < map.length; i++)
            map[i] = -1;
    }
    
    public void put(int key, int value) {
        map[key] = value;
    }
    
    public int get(int key) {
        return map[key];
    }
    
    public void remove(int key) {
        map[key] = -1;
    }
}

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap obj = new MyHashMap();
 * obj.put(key,value);
 * int param_2 = obj.get(key);
 * obj.remove(key);
 */
 
 ..................................................
 
 class MyHashMap {
    
    LinkedList<Entry>[] map;
    public static int siz = 769;  // prime no

    public MyHashMap() {
        map = new LinkedList[siz];
    }
    
    public void put(int key, int value) {
        
        int bucket = key % siz;
        if(map[bucket] == null)
        {
            map[bucket] = new LinkedList<Entry>();
            map[bucket].add(new Entry(key,value));
            
        }
        else
        {
            for(Entry e: map[bucket])
            {
                if(e.key == key)
                {
                    e.val = value;
                    return;
                }
                
            }
           map[bucket].add(new Entry(key,value));
        }
        
        
    }
    
    public int get(int key) {
        
        int bucket = key % siz;
        LinkedList<Entry> entries = map[bucket];
        if(entries == null)
            return -1;
        
        for(Entry e : entries)
            if(e.key == key)
                return e.val;
        
        return -1;
    }
    
    public void remove(int key) {
        int bucket = key % siz;
        Entry toRemove = null;
        if(map[bucket]==null)
            return;
        
        else
        {
            for(Entry e : map[bucket])
            {
                if(e.key == key)
                    toRemove = e;
            }
            if(toRemove == null)
                return;
            map[bucket].remove(toRemove);
                
        }
    }
}

class Entry
{
    public int key;
    public int val;
    
    public Entry(int key, int val)
    {
        this.key = key;
        this.val = val;
    }
}
