/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicatesUnsorted(ListNode head) {
        
       Map<Integer, Integer> freqmap = new HashMap<>();
        ListNode curr = head;
        
        
        while(curr != null)
        {
            freqmap.put(curr.val, freqmap.getOrDefault(curr.val,0)+1);
            curr = curr.next;
        }
        
        curr = head;
        ListNode prev = head;
    
        
        while(curr != null)
        {
            if(freqmap.get(curr.val) > 1)
            {
                if(curr == head)
                {
                    head = head.next;
                    prev = head;
                    curr = head;
                }
                
                else
                {
                    prev.next = curr.next;
                    curr = curr.next;
                }
                
            }
            
            else
            {
                prev = curr;
                curr = curr.next;
            }
        }
    
        return head;
    }
}
