public class Solution {
    public boolean hasCycle(ListNode head) {
        
        Set<ListNode> visited = new HashSet<>();
        
        while(head != null)
        {
            if(visited.contains(head)) return true;
            
            visited.add(head);
            head = head.next;
        }
        
        return false;
    }
}

.............................................................
floyd cycle

public class Solution {
    public boolean hasCycle(ListNode head) {
        
        ListNode fast = head;
        ListNode slow = head;
        
        while(fast != null && fast.next != null)
        {
            fast = fast.next.next;
            slow = slow.next;
            if(fast == slow)
                return true;
        }
        
        return false;
    }
}
