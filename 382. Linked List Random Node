/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    List<Integer> list;
    int n;
    Random r;

    public Solution(ListNode head) {
        list = new ArrayList<>();
    
        ListNode temp = head;
        
        while(temp != null)
        {
            list.add(temp.val);
            temp = temp.next;
        }
        
        n = list.size();
        r = new Random();
    }
    
    public int getRandom() {
        
        int randIndex = r.nextInt(n);
        
        return list.get(randIndex);
        
    }
}

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */
 
 // https://leetcode.com/problems/linked-list-random-node/discuss/1672338/Java-Solution-or-Briefly-Explained-or-Using-Random-Class
